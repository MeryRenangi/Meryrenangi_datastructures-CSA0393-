#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_SIZE 100
char stack[MAX_SIZE];
int top = -1;
void push(char c) {
    if (top == MAX_SIZE - 1) {
        printf("Stack Overflow\n");
        return;
    }
    stack[++top] = c;
}
char pop() {
    if (top == -1) {
        printf("Stack Underflow\n");
        return '\0';
    }
    return stack[top--];
}
int isMatchingPair(char opening, char closing) {
    if (opening == '(' && closing == ')')
        return 1;
    return 0;
}
int isBalanced(char exp[]) {
    int i;
    char popped_char;
    for (i = 0; i < strlen(exp); i++) {
        if (exp[i] == '(') {
            push(exp[i]);
        } else if (exp[i] == ')') {
            if (top == -1) {
                return 0;
            }
            popped_char = pop();
            if (!isMatchingPair(popped_char, exp[i])) {
                return 0;
            }
        }
    }
    if (top == -1) {
        return 1;
    } else {
        return 0;
    }
}
int main() {
    char exp[] = "(A+B)*(C-D))/E^2";

    if (isBalanced(exp)) {
        printf("The expression has balanced parentheses.\n");
    } else {
        printf("The expression has unbalanced parentheses.\n");
    }
    return 0;
}
